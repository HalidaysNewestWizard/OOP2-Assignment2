@using TravelLess.Data;
@using TravelLess.DataManagers;
@page "/reservations"

<h2>Reservations</h2>

<div class="Container">
    <div class="search">
        <div>
            <label for="code">Reservation Code:</label>
            <input id="code" placeholder="Reservation Code" @bind="code" />
        </div>
        <div>
            <label for="line">Airline:</label>
            <input id="line" placeholder="Airline" @bind="airline" />
        </div>
        <div>
            <label for="name">Traveller Name:</label>
            <input id="name" placeholder="Traveller Name" @bind="name" />
        </div>

        <button @onclick="SearchRes">Search</button>
    </div>
    <h2>Found Reservations</h2>
    <div>
        @if (foundReservations.Count == 0)
        {
            <div>
                <p>Loading...</p>
            </div>
        }
        else
        {
            <table>
                <tr>
                    <th>Code</th>
                    <th>Flight Code</th>
                    <th>Airline</th>
                    <th>Name</th>
                    <th>Citizenship</th>
                    <th>Cost</th>
                    <th>Active</th>
                    <th>Update</th>
                </tr>

                @foreach (Reservation res in foundReservations)
                {
                    <tr>
                        <td>@res.Code</td>
                        <td>@res.FlightCode</td>
                        <td>@res.Airline</td>
                        <td>@res.Name</td>
                        <td>@res.Citizenship</td>
                        <td>@res.Cost</td>
                        <td>@res.Active</td>
                        <td>
                            <button @onclick="@(() => OpenDialog(res))">Update</button>
                        </td>
                    </tr>
                }
            </table>
        }

    </div>
</div>
@if (showResDialog)
{
    <div class="dialog-background">
        <dialog open>
            <h2>Reservation Information</h2>
            <label for="name2">Traveller Name:</label>
            <input id="name2" placeholder="Name" @bind="reservationName" /><br />
            <label for="citizen">Citizenship:</label>
            <input id="citizen" placeholder="Citizenship" @bind="resCitizenship" /><br />
            <div class="center">
                <button @onclick="UpdateReso">Update</button>
            </div>
        </dialog>
    </div>
}




@code {
    string reservationName = "";
    string resCitizenship = "";
    string name = "";
    string code = "";
    string airline = "";
    Reservation selectedRes = null;
    bool showResDialog = false;

    List<Reservation> foundReservations = new List<Reservation>();

    ReservationManager manager = new();

    protected override async Task OnInitializedAsync()
    {
        foundReservations = manager.Reservations;
    }
    void OpenDialog(Reservation res)
    {
        reservationName = res.Name;
        resCitizenship = res.Citizenship;
        selectedRes = res;
        showResDialog = true;
    }

    void UpdateReso()
    {
        showResDialog = false;
        manager.UpdateReservation(selectedRes, reservationName, resCitizenship,false);
    }
    void SearchRes()
    {

        foundReservations = manager.FindReso(code, airline, name);

    }
}
